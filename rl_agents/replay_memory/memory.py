from typing import TYPE_CHECKING, Protocol, NamedTuple, Type
import torch

class MemoryField (NamedTuple):
    name : str
    shape : tuple
    dtype : Type
    default : None = None

class Memory[T](Protocol):
    max_length : int
    fields : list[MemoryField]
    def store(self, **kwargs) -> tuple[torch.Tensor, object]:...
    def reset(self): ...
    def __len__(self) -> int : ...
    def __getitem__(self, index) -> T: ...
    def __getitems__(self, index) -> T: ...
    def __setitem__(self, loc, val): ...

class EditableMemory[T](Memory[T]):
    def add_field(self, name : str, shape : tuple[int], dtype : None, default_value = None):...
    def remove_field(self, name : str):...
